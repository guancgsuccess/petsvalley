<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.petsvalley.mapper.PetRoomMapper">
  <cache type="com.petsvalley.MybatisRedisCache" blocking="false"
         flushInterval="0" readOnly="true" size="1024" eviction="FIFO"/>
  <resultMap id="BaseResultMap" type="com.petsvalley.entity.PetRoom">
    <id column="pet_room_id" jdbcType="INTEGER" property="petRoomId" />
    <result column="pet_name" jdbcType="VARCHAR" property="petName" />
    <result column="pet_phone" jdbcType="VARCHAR" property="petPhone" />
    <result column="pet_place" jdbcType="VARCHAR" property="petPlace" />
    <result column="pet_photo" jdbcType="VARCHAR" property="petPhoto" />
    <result column="pet_message" jdbcType="VARCHAR" property="petMessage" />
    <result column="cust_id" jdbcType="INTEGER" property="custId" />
    <result column="pet_room_state" jdbcType="INTEGER" property="petRoomState" />
    <result column="pet_room_spare" jdbcType="VARCHAR" property="petRoomSpare" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pet_room_id, pet_name, pet_phone, pet_place, pet_photo, pet_message, cust_id, pet_room_state, 
    pet_room_spare
  </sql>
  <select id="selectByExample" parameterType="com.petsvalley.entity.PetRoomExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pet_room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pet_room
    where pet_room_id = #{petRoomId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pet_room
    where pet_room_id = #{petRoomId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.petsvalley.entity.PetRoomExample">
    delete from pet_room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.petsvalley.entity.PetRoom">
    insert into pet_room (pet_room_id, pet_name, pet_phone, 
      pet_place, pet_photo, pet_message, 
      cust_id, pet_room_state, pet_room_spare
      )
    values (#{petRoomId,jdbcType=INTEGER}, #{petName,jdbcType=VARCHAR}, #{petPhone,jdbcType=VARCHAR}, 
      #{petPlace,jdbcType=VARCHAR}, #{petPhoto,jdbcType=VARCHAR}, #{petMessage,jdbcType=VARCHAR}, 
      #{custId,jdbcType=INTEGER}, #{petRoomState,jdbcType=INTEGER}, #{petRoomSpare,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.petsvalley.entity.PetRoom">
    insert into pet_room
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="petRoomId != null">
        pet_room_id,
      </if>
      <if test="petName != null">
        pet_name,
      </if>
      <if test="petPhone != null">
        pet_phone,
      </if>
      <if test="petPlace != null">
        pet_place,
      </if>
      <if test="petPhoto != null">
        pet_photo,
      </if>
      <if test="petMessage != null">
        pet_message,
      </if>
      <if test="custId != null">
        cust_id,
      </if>
      <if test="petRoomState != null">
        pet_room_state,
      </if>
      <if test="petRoomSpare != null">
        pet_room_spare,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="petRoomId != null">
        #{petRoomId,jdbcType=INTEGER},
      </if>
      <if test="petName != null">
        #{petName,jdbcType=VARCHAR},
      </if>
      <if test="petPhone != null">
        #{petPhone,jdbcType=VARCHAR},
      </if>
      <if test="petPlace != null">
        #{petPlace,jdbcType=VARCHAR},
      </if>
      <if test="petPhoto != null">
        #{petPhoto,jdbcType=VARCHAR},
      </if>
      <if test="petMessage != null">
        #{petMessage,jdbcType=VARCHAR},
      </if>
      <if test="custId != null">
        #{custId,jdbcType=INTEGER},
      </if>
      <if test="petRoomState != null">
        #{petRoomState,jdbcType=INTEGER},
      </if>
      <if test="petRoomSpare != null">
        #{petRoomSpare,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.petsvalley.entity.PetRoomExample" resultType="java.lang.Long">
    select count(*) from pet_room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pet_room
    <set>
      <if test="record.petRoomId != null">
        pet_room_id = #{record.petRoomId,jdbcType=INTEGER},
      </if>
      <if test="record.petName != null">
        pet_name = #{record.petName,jdbcType=VARCHAR},
      </if>
      <if test="record.petPhone != null">
        pet_phone = #{record.petPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.petPlace != null">
        pet_place = #{record.petPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.petPhoto != null">
        pet_photo = #{record.petPhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.petMessage != null">
        pet_message = #{record.petMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.custId != null">
        cust_id = #{record.custId,jdbcType=INTEGER},
      </if>
      <if test="record.petRoomState != null">
        pet_room_state = #{record.petRoomState,jdbcType=INTEGER},
      </if>
      <if test="record.petRoomSpare != null">
        pet_room_spare = #{record.petRoomSpare,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pet_room
    set pet_room_id = #{record.petRoomId,jdbcType=INTEGER},
      pet_name = #{record.petName,jdbcType=VARCHAR},
      pet_phone = #{record.petPhone,jdbcType=VARCHAR},
      pet_place = #{record.petPlace,jdbcType=VARCHAR},
      pet_photo = #{record.petPhoto,jdbcType=VARCHAR},
      pet_message = #{record.petMessage,jdbcType=VARCHAR},
      cust_id = #{record.custId,jdbcType=INTEGER},
      pet_room_state = #{record.petRoomState,jdbcType=INTEGER},
      pet_room_spare = #{record.petRoomSpare,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.petsvalley.entity.PetRoom">
    update pet_room
    <set>
      <if test="petName != null">
        pet_name = #{petName,jdbcType=VARCHAR},
      </if>
      <if test="petPhone != null">
        pet_phone = #{petPhone,jdbcType=VARCHAR},
      </if>
      <if test="petPlace != null">
        pet_place = #{petPlace,jdbcType=VARCHAR},
      </if>
      <if test="petPhoto != null">
        pet_photo = #{petPhoto,jdbcType=VARCHAR},
      </if>
      <if test="petMessage != null">
        pet_message = #{petMessage,jdbcType=VARCHAR},
      </if>
      <if test="custId != null">
        cust_id = #{custId,jdbcType=INTEGER},
      </if>
      <if test="petRoomState != null">
        pet_room_state = #{petRoomState,jdbcType=INTEGER},
      </if>
      <if test="petRoomSpare != null">
        pet_room_spare = #{petRoomSpare,jdbcType=VARCHAR},
      </if>
    </set>
    where pet_room_id = #{petRoomId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.petsvalley.entity.PetRoom">
    update pet_room
    set pet_name = #{petName,jdbcType=VARCHAR},
      pet_phone = #{petPhone,jdbcType=VARCHAR},
      pet_place = #{petPlace,jdbcType=VARCHAR},
      pet_photo = #{petPhoto,jdbcType=VARCHAR},
      pet_message = #{petMessage,jdbcType=VARCHAR},
      cust_id = #{custId,jdbcType=INTEGER},
      pet_room_state = #{petRoomState,jdbcType=INTEGER},
      pet_room_spare = #{petRoomSpare,jdbcType=VARCHAR}
    where pet_room_id = #{petRoomId,jdbcType=INTEGER}
  </update>
</mapper>