<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.petsvalley.mapper.PetMapper">
  <cache type="com.petsvalley.MybatisRedisCache" blocking="false"
         flushInterval="0" readOnly="true" size="1024" eviction="FIFO"/>
  <resultMap id="BaseResultMap" type="com.petsvalley.entity.Pet">
    <id column="pet_id" jdbcType="INTEGER" property="petId" />
    <result column="cust_id" jdbcType="INTEGER" property="custId" />
    <result column="pet_mate_state" jdbcType="INTEGER" property="petMateState" />
    <result column="pet_name" jdbcType="VARCHAR" property="petName" />
    <result column="pet_gender" jdbcType="INTEGER" property="petGender" />
    <result column="pet_age" jdbcType="INTEGER" property="petAge" />
    <result column="pet_type_id" jdbcType="INTEGER" property="petTypeId" />
    <result column="pet_photo" jdbcType="VARCHAR" property="petPhoto" />
    <result column="pet_weight" jdbcType="DOUBLE" property="petWeight" />
    <result column="pet_state" jdbcType="INTEGER" property="petState" />
    <result column="pet_spare" jdbcType="VARCHAR" property="petSpare" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pet_id, cust_id, pet_mate_state, pet_name, pet_gender, pet_age, pet_type_id, pet_photo, 
    pet_weight, pet_state, pet_spare
  </sql>
  <select id="selectByExample" parameterType="com.petsvalley.entity.PetExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pet
    where pet_id = #{petId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pet
    where pet_id = #{petId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.petsvalley.entity.PetExample">
    delete from pet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.petsvalley.entity.Pet">
    insert into pet (pet_id, cust_id, pet_mate_state, 
      pet_name, pet_gender, pet_age, 
      pet_type_id, pet_photo, pet_weight, 
      pet_state, pet_spare)
    values (#{petId,jdbcType=INTEGER}, #{custId,jdbcType=INTEGER}, #{petMateState,jdbcType=INTEGER}, 
      #{petName,jdbcType=VARCHAR}, #{petGender,jdbcType=INTEGER}, #{petAge,jdbcType=INTEGER}, 
      #{petTypeId,jdbcType=INTEGER}, #{petPhoto,jdbcType=VARCHAR}, #{petWeight,jdbcType=DOUBLE}, 
      #{petState,jdbcType=INTEGER}, #{petSpare,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.petsvalley.entity.Pet">
    insert into pet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="petId != null">
        pet_id,
      </if>
      <if test="custId != null">
        cust_id,
      </if>
      <if test="petMateState != null">
        pet_mate_state,
      </if>
      <if test="petName != null">
        pet_name,
      </if>
      <if test="petGender != null">
        pet_gender,
      </if>
      <if test="petAge != null">
        pet_age,
      </if>
      <if test="petTypeId != null">
        pet_type_id,
      </if>
      <if test="petPhoto != null">
        pet_photo,
      </if>
      <if test="petWeight != null">
        pet_weight,
      </if>
      <if test="petState != null">
        pet_state,
      </if>
      <if test="petSpare != null">
        pet_spare,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="petId != null">
        #{petId,jdbcType=INTEGER},
      </if>
      <if test="custId != null">
        #{custId,jdbcType=INTEGER},
      </if>
      <if test="petMateState != null">
        #{petMateState,jdbcType=INTEGER},
      </if>
      <if test="petName != null">
        #{petName,jdbcType=VARCHAR},
      </if>
      <if test="petGender != null">
        #{petGender,jdbcType=INTEGER},
      </if>
      <if test="petAge != null">
        #{petAge,jdbcType=INTEGER},
      </if>
      <if test="petTypeId != null">
        #{petTypeId,jdbcType=INTEGER},
      </if>
      <if test="petPhoto != null">
        #{petPhoto,jdbcType=VARCHAR},
      </if>
      <if test="petWeight != null">
        #{petWeight,jdbcType=DOUBLE},
      </if>
      <if test="petState != null">
        #{petState,jdbcType=INTEGER},
      </if>
      <if test="petSpare != null">
        #{petSpare,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.petsvalley.entity.PetExample" resultType="java.lang.Long">
    select count(*) from pet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pet
    <set>
      <if test="record.petId != null">
        pet_id = #{record.petId,jdbcType=INTEGER},
      </if>
      <if test="record.custId != null">
        cust_id = #{record.custId,jdbcType=INTEGER},
      </if>
      <if test="record.petMateState != null">
        pet_mate_state = #{record.petMateState,jdbcType=INTEGER},
      </if>
      <if test="record.petName != null">
        pet_name = #{record.petName,jdbcType=VARCHAR},
      </if>
      <if test="record.petGender != null">
        pet_gender = #{record.petGender,jdbcType=INTEGER},
      </if>
      <if test="record.petAge != null">
        pet_age = #{record.petAge,jdbcType=INTEGER},
      </if>
      <if test="record.petTypeId != null">
        pet_type_id = #{record.petTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.petPhoto != null">
        pet_photo = #{record.petPhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.petWeight != null">
        pet_weight = #{record.petWeight,jdbcType=DOUBLE},
      </if>
      <if test="record.petState != null">
        pet_state = #{record.petState,jdbcType=INTEGER},
      </if>
      <if test="record.petSpare != null">
        pet_spare = #{record.petSpare,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pet
    set pet_id = #{record.petId,jdbcType=INTEGER},
      cust_id = #{record.custId,jdbcType=INTEGER},
      pet_mate_state = #{record.petMateState,jdbcType=INTEGER},
      pet_name = #{record.petName,jdbcType=VARCHAR},
      pet_gender = #{record.petGender,jdbcType=INTEGER},
      pet_age = #{record.petAge,jdbcType=INTEGER},
      pet_type_id = #{record.petTypeId,jdbcType=INTEGER},
      pet_photo = #{record.petPhoto,jdbcType=VARCHAR},
      pet_weight = #{record.petWeight,jdbcType=DOUBLE},
      pet_state = #{record.petState,jdbcType=INTEGER},
      pet_spare = #{record.petSpare,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.petsvalley.entity.Pet">
    update pet
    <set>
      <if test="custId != null">
        cust_id = #{custId,jdbcType=INTEGER},
      </if>
      <if test="petMateState != null">
        pet_mate_state = #{petMateState,jdbcType=INTEGER},
      </if>
      <if test="petName != null">
        pet_name = #{petName,jdbcType=VARCHAR},
      </if>
      <if test="petGender != null">
        pet_gender = #{petGender,jdbcType=INTEGER},
      </if>
      <if test="petAge != null">
        pet_age = #{petAge,jdbcType=INTEGER},
      </if>
      <if test="petTypeId != null">
        pet_type_id = #{petTypeId,jdbcType=INTEGER},
      </if>
      <if test="petPhoto != null">
        pet_photo = #{petPhoto,jdbcType=VARCHAR},
      </if>
      <if test="petWeight != null">
        pet_weight = #{petWeight,jdbcType=DOUBLE},
      </if>
      <if test="petState != null">
        pet_state = #{petState,jdbcType=INTEGER},
      </if>
      <if test="petSpare != null">
        pet_spare = #{petSpare,jdbcType=VARCHAR},
      </if>
    </set>
    where pet_id = #{petId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.petsvalley.entity.Pet">
    update pet
    set cust_id = #{custId,jdbcType=INTEGER},
      pet_mate_state = #{petMateState,jdbcType=INTEGER},
      pet_name = #{petName,jdbcType=VARCHAR},
      pet_gender = #{petGender,jdbcType=INTEGER},
      pet_age = #{petAge,jdbcType=INTEGER},
      pet_type_id = #{petTypeId,jdbcType=INTEGER},
      pet_photo = #{petPhoto,jdbcType=VARCHAR},
      pet_weight = #{petWeight,jdbcType=DOUBLE},
      pet_state = #{petState,jdbcType=INTEGER},
      pet_spare = #{petSpare,jdbcType=VARCHAR}
    where pet_id = #{petId,jdbcType=INTEGER}
  </update>
  <select id="selectByCustId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pet
    where cust_id=#{custId}
  </select>

  <select id="selectIsMyPet" resultType="java.lang.Integer">
    select count(pet_id)
    from pet
    where cust_id=#{arg0} and pet_id=#{arg1}
  </select>

  <update id="updatePetState">
    update pet
    set pet_state=#{arg1}
    where pet_id=#{arg0}
  </update>
</mapper>